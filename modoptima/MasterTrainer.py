from modoptima.Train.yolov7tiny.Trainer import YOLOV7TinyPruningQuantization


class YOLOV7:
	def __init__(self,weights='yolo7.pt',
                 cfg="",
                 data="",
                 hyp="",
                 epochs=300,
                 batch_size=16,
                 img_size=[640,640],
                 rect=False,
                 resume=False,
                 nosave=False,
                 notest=False,
                 noautoanchor=False,
                 evolve=False,
                 bucket="",
                 cache_images=False,
                 image_weights=False,
                 device='cuda',
                 multi_scale=False,
                 single_cls=False,
                 adam=False,
                 sync_bn=False,
                 local_rank=-1,
                 workers=8,
                 project='./optmodel/',
                 entity=False,
                 name='exp',
                 exist_ok=False,
                 quad=False,
                 linear_lr=False,
                 label_smoothing=0.0,
                 upload_dataset=False,
                 bbox_interval=-1,
                 save_period=-1,
                 artifact_alias="latest",
                 freeze=[0],
                 v5_metric=1.0,
                 recipe="",transfer_learning=False,
                 save_dir='./optmodel/',quantize=False,prun_start_epoch=0,prun_end_epoch=0,quant_start_ep=243):

	    self.main_class=YOLOV7TinyPruningQuantization(weights=weights,
                 cfg=cfg,
                 data=data,
                 hyp=hyp,
                 epochs=epochs,
                 batch_size=batch_size,
                 img_size=img_size,
                 rect=rect,
                 resume=resume,
                 nosave=nosave,
                 notest=notest,
                 noautoanchor=noautoanchor,
                 evolve=evolve,
                 bucket=bucket,
                 cache_images=cache_images,
                 image_weights=image_weights,
                 device=device,
                 multi_scale=multi_scale,
                 single_cls=single_cls,
                 adam=adam,
                 sync_bn=sync_bn,
                 local_rank=local_rank,
                 workers=workers,
                 project=project,
                 entity=entity,
                 name=name,
                 exist_ok=exist_ok,
                 quad=quad,
                 linear_lr=linear_lr,
                 label_smoothing=label_smoothing,
                 upload_dataset=upload_dataset,
                 bbox_interval=bbox_interval,
                 save_period=save_period,
                 artifact_alias=artifact_alias,
                 freeze=freeze,
                 v5_metric=v5_metric,
                 recipe=recipe,transfer_learning=transfer_learning,
                 save_dir=save_dir,quantize=quantize,prun_start_epoch=prun_start_epoch,prun_end_epoch=prun_end_epoch,quant_start_ep=quant_start_ep)


	def create_optimized_model(self):
		self.main_class.create_optimized_model()

	def export_model(self,weights='./optmodel/exp/best.pt',
                    img_size=[640,640],batch_size=1,dynamic=False,dynamic_batch=False,
                    grid=False,end2end=False,max_wh=False,topk_all=100,iou_thres=0.45,
                    conf_thres=0.25,device='cpu',simplify=False,include_nms=False,
                    fp16=False,int8=False):

	    self.main_class.export_model(weights=weights,
                    img_size=img_size,batch_size=batch_size,dynamic=dynamic,dynamic_batch=dynamic_batch,
                    grid=grid,end2end=end2end,max_wh=max_wh,topk_all=topk_all,iou_thres=iou_thres,
                    conf_thres=conf_thres,device=device,simplify=simplify,include_nms=include_nms,
                    fp16=fp16,int8=int8)


